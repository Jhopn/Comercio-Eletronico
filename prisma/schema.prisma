// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PedidoStatus {
  PENDENTE
  COMPLETO
  ENTREGA
}

model Produtos{
  id String @id @default(uuid())
  nome String @unique
  descricao String
  quantidade Int
  preco Decimal
  imagem String
  pedidoProdutos pedidosProdutos[]
  criadoEm DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model Clientes{
  id String @id @default(uuid())
  nome  String
  email     String     @unique
  senha  String
  endereco String 
  Pedidos Pedidos[]
  criadoEm DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model pedidosProdutos{
  id String @id @default(uuid())
  quantidade Int
  Pedidos      Pedidos?     @relation(fields: [pedidoId], references: [id], onDelete: Cascade)
  pedidoId String?
  Produtos      Produtos?     @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  produtoId    String?   
}

model Pedidos{
  id String @id @default(uuid())
  status PedidoStatus @default(PENDENTE)
  pedidoProdutos pedidosProdutos[]
  Clientes      Clientes?     @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  clienteId    String?   
}